from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import matplotlib.pyplot as plt
import matplotlib.tri as mtri
import scipy.io as scio
import csv
import numpy as np
import Deepxde.mywork.draw_picture as Draw
import Deepxde.deepxde as dde
from Deepxde.deepxde.backend import tf
import time


def main():
    start = time.time()
    def pde(x, y):
        X, Y, Z = x[:, 0:1], x[:, 1:2], x[:, 2:]
        dy_x = tf.gradients(y, x)[0]
        dy_x, dy_y, dy_z = dy_x[:, 0:1], dy_x[:, 1:2], dy_x[:, 2:]
        K = tf.sqrt(tf.pow(4*X*X*X-2*X, 2) + tf.pow(4*Y*Y*Y-2*Y, 2) + tf.pow(4*Z*Z*Z-2*Z, 2))
        n1, n2, n3 = 4*X*X*X-2*X, 4*Y*Y*Y-2*Y, 4*Z*Z*Z-2*Z
        P1 = ((1-n1*n1/(K*K))*dy_x + (-n1*n2/(K*K))*dy_y + (-n1*n3/(K*K))*dy_z)
        P2 = ((-n1*n2/(K*K))*dy_x + (1-n2*n2/(K*K))*dy_y + (-n2*n3/(K*K))*dy_z)
        P3 = ((-n1*n3/(K*K))*dy_x + (-n2*n3/(K*K))*dy_y + (1-n3*n3/(K*K))*dy_z)
        dyx = tf.gradients(P1, x)[0]
        dyy = tf.gradients(P2, x)[0]
        dyz = tf.gradients(P3, x)[0]
        w1 = (1-n1*n1/(K*K))*dyx[:, 0:1] + (-n1*n2/(K*K))*dyx[:, 1:2] + (-n1*n3/(K*K))*dyx[:, 2:]
        w2 = (-n1*n2/(K*K))*dyy[:, 0:1] + (1-n2*n2/(K*K))*dyy[:, 1:2] + (-n2*n3/(K*K))*dyy[:, 2:]
        w3 = (-n1*n3/(K*K))*dyz[:, 0:1] + (-n2*n3/(K*K))*dyz[:, 1:2] + (1-n3*n3/(K*K))*dyz[:, 2:]
        diffusion = w1 + w2 + w3

        epsilon = 1e-1
        gamma = 1.0
        beta_1, beta_2, beta_3 = 1.0, 1.0, 1.0

                # 1e-3
                # - (tf.atan(1000*X)*tf.atan(1000*Y)*tf.atan(1000*Z) - ((2*Y - 4*tf.pow(Y,3))*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((2*Z - 4*tf.pow(Z,3))*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((2*X - 4*tf.pow(X,3))*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(X,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(Y,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(Z,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((2*X - 4*tf.pow(X,3))*(((2*Y - 4*tf.pow(Y,3))*(((2*X - 4*tf.pow(X,3))*((500000*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*X)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Y,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*X)*tf.atan(1000*Z)*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000000000*Y*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/(tf.pow((1000000*tf.pow(Y,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000000*tf.atan(1000*Z))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Y,2) + 1)) + ((2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(Y,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Z - 4*tf.pow(Z,3))*(((2*X - 4*tf.pow(X,3))*((500000*tf.atan(1000*Y)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*X)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*X)*tf.atan(1000*Y)*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000000000*Z*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/(tf.pow((1000000*tf.pow(Z,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000000*tf.atan(1000*Y))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Z,2) + 1)) + ((2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*X - 4*tf.pow(X,3))*(((2*X - 4*tf.pow(X,3))*((500000*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*Y)*tf.atan(1000*Z)*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000000000*X*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/(tf.pow((1000000*tf.pow(X,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(X,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (2000000000*X*tf.atan(1000*Y)*tf.atan(1000*Z))/tf.pow((1000000*tf.pow(X,2) + 1),2) + (tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((2*Y - 4*tf.pow(Y,3))*(((2*X - 4*tf.pow(X,3))*(((2*Y - 4*tf.pow(Y,3))*((500000*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*Y)*tf.atan(1000*Z)*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000000000*X*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/(tf.pow((1000000*tf.pow(X,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000000*tf.atan(1000*Z))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Y,2) + 1)) + ((2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(X,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Z - 4*tf.pow(Z,3))*(((2*Y - 4*tf.pow(Y,3))*((500000*tf.atan(1000*Y)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*X)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*X)*tf.atan(1000*Y)*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000000000*Z*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/(tf.pow((1000000*tf.pow(Z,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000000*tf.atan(1000*X))/((1000000*tf.pow(Y,2) + 1)*(1000000*tf.pow(Z,2) + 1)) + ((2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Y - 4*tf.pow(Y,3))*(((2*Y - 4*tf.pow(Y,3))*((500000*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*X)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Y,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*X)*tf.atan(1000*Z)*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000000000*Y*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/(tf.pow((1000000*tf.pow(Y,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(Y,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (2000000000*Y*tf.atan(1000*X)*tf.atan(1000*Z))/tf.pow((1000000*tf.pow(Y,2) + 1),2) + (tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((2*Z - 4*tf.pow(Z,3))*(((2*X - 4*tf.pow(X,3))*(((2*Z - 4*tf.pow(Z,3))*((500000*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*Y)*tf.atan(1000*Z)*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000000000*X*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/(tf.pow((1000000*tf.pow(X,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000000*tf.atan(1000*Y))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Z,2) + 1)) + ((2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(X,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Y - 4*tf.pow(Y,3))*(((2*Z - 4*tf.pow(Z,3))*((500000*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*X)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Y,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*X)*tf.atan(1000*Z)*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000000000*Y*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/(tf.pow((1000000*tf.pow(Y,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000000*tf.atan(1000*X))/((1000000*tf.pow(Y,2) + 1)*(1000000*tf.pow(Z,2) + 1)) + ((2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Y,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Z - 4*tf.pow(Z,3))*(((2*Z - 4*tf.pow(Z,3))*((500000*tf.atan(1000*Y)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*X)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*X)*tf.atan(1000*Y)*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000000000*Z*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/(tf.pow((1000000*tf.pow(Z,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(Z,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (2000000000*Z*tf.atan(1000*X)*tf.atan(1000*Y))/tf.pow((1000000*tf.pow(Z,2) + 1),2)))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*X - 4*tf.pow(X,3))*((500000*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*Y)*tf.atan(1000*Z)*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000000000*X*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/(tf.pow((1000000*tf.pow(X,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(X,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Y - 4*tf.pow(Y,3))*((500000*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*X)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Y,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*X)*tf.atan(1000*Z)*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000000000*Y*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/(tf.pow((1000000*tf.pow(Y,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Y,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Z - 4*tf.pow(Z,3))*((500000*tf.atan(1000*Y)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500000*tf.atan(1000*X)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*(1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (500*tf.atan(1000*X)*tf.atan(1000*Y)*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000000000*Z*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/(tf.pow((1000000*tf.pow(Z,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Y)*tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (125*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (1000*tf.atan(1000*X)*tf.atan(1000*Y))/(1000000*tf.pow(Z,2) + 1) + (1000*tf.atan(1000*X)*tf.atan(1000*Z))/(1000000*tf.pow(Y,2) + 1) + (1000*tf.atan(1000*Y)*tf.atan(1000*Z))/(1000000*tf.pow(X,2) + 1) + (tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (2000000*X*tf.atan(1000*Y)*tf.atan(1000*Z))/tf.pow((1000000*tf.pow(X,2) + 1),2) + (2000000*Y*tf.atan(1000*X)*tf.atan(1000*Z))/tf.pow((1000000*tf.pow(Y,2) + 1),2) + (2000000*Z*tf.atan(1000*X)*tf.atan(1000*Y))/tf.pow((1000000*tf.pow(Z,2) + 1),2) + (tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2)*((500*tf.atan(1000*Y)*tf.atan(1000*Z)*(2*X - 4*tf.pow(X,3)))/((1000000*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Z)*(2*Y - 4*tf.pow(Y,3)))/((1000000*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (500*tf.atan(1000*X)*tf.atan(1000*Y)*(2*Z - 4*tf.pow(Z,3)))/((1000000*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8000*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)))
        return -epsilon * diffusion + (beta_1*P1 + beta_2*P2 + beta_3*P3) + gamma * y - \
               (tf.atan(10*X)*tf.atan(10*Y)*tf.atan(10*Z) - ((2*Y - 4*tf.pow(Y,3))*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((2*Z - 4*tf.pow(Z,3))*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((2*X - 4*tf.pow(X,3))*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((2*X - 4*tf.pow(X,3))*(((2*X - 4*tf.pow(X,3))*(((2*X - 4*tf.pow(X,3))*((50*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*Y)*tf.atan(10*Z)*(12*tf.pow(X,2) - 2))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000*X*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/(tf.pow((100*tf.pow(X,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(X,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (2000*X*tf.atan(10*Y)*tf.atan(10*Z))/tf.pow((100*tf.pow(X,2) + 1),2) + (tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Y - 4*tf.pow(Y,3))*(((2*X - 4*tf.pow(X,3))*((50*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*X)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Y,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*X)*tf.atan(10*Z)*(12*tf.pow(Y,2) - 2))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000*Y*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/(tf.pow((100*tf.pow(Y,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (100*tf.atan(10*Z))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Y,2) + 1)) + ((2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(Y,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Z - 4*tf.pow(Z,3))*(((2*X - 4*tf.pow(X,3))*((50*tf.atan(10*Y)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*X)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*X)*tf.atan(10*Y)*(12*tf.pow(Z,2) - 2))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000*Z*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/(tf.pow((100*tf.pow(Z,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (100*tf.atan(10*Y))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Z,2) + 1)) + ((2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(20*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((2*Y - 4*tf.pow(Y,3))*(((2*Y - 4*tf.pow(Y,3))*(((2*Y - 4*tf.pow(Y,3))*((50*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*X)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Y,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*X)*tf.atan(10*Z)*(12*tf.pow(Y,2) - 2))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000*Y*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/(tf.pow((100*tf.pow(Y,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(Y,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (2000*Y*tf.atan(10*X)*tf.atan(10*Z))/tf.pow((100*tf.pow(Y,2) + 1),2) + (tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*X - 4*tf.pow(X,3))*(((2*Y - 4*tf.pow(Y,3))*((50*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*Y)*tf.atan(10*Z)*(12*tf.pow(X,2) - 2))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000*X*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/(tf.pow((100*tf.pow(X,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (100*tf.atan(10*Z))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Y,2) + 1)) + ((2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(X,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Z - 4*tf.pow(Z,3))*(((2*Y - 4*tf.pow(Y,3))*((50*tf.atan(10*Y)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*X)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*X)*tf.atan(10*Y)*(12*tf.pow(Z,2) - 2))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000*Z*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/(tf.pow((100*tf.pow(Z,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (100*tf.atan(10*X))/((100*tf.pow(Y,2) + 1)*(100*tf.pow(Z,2) + 1)) + ((2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(20*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*X - 4*tf.pow(X,3))*((50*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*Y)*tf.atan(10*Z)*(12*tf.pow(X,2) - 2))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000*X*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/(tf.pow((100*tf.pow(X,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(20*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(X,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(20*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((2*Z - 4*tf.pow(Z,3))*(((2*Z - 4*tf.pow(Z,3))*(((2*Z - 4*tf.pow(Z,3))*((50*tf.atan(10*Y)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*X)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*X)*tf.atan(10*Y)*(12*tf.pow(Z,2) - 2))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000*Z*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/(tf.pow((100*tf.pow(Z,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(Z,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (2000*Z*tf.atan(10*X)*tf.atan(10*Y))/tf.pow((100*tf.pow(Z,2) + 1),2)))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*X - 4*tf.pow(X,3))*(((2*Z - 4*tf.pow(Z,3))*((50*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*Y)*tf.atan(10*Z)*(12*tf.pow(X,2) - 2))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000*X*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/(tf.pow((100*tf.pow(X,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(X,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (100*tf.atan(10*Y))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Z,2) + 1)) + ((2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(X,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Y - 4*tf.pow(Y,3))*(((2*Z - 4*tf.pow(Z,3))*((50*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*X)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Y,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*X)*tf.atan(10*Z)*(12*tf.pow(Y,2) - 2))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000*Y*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/(tf.pow((100*tf.pow(Y,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (100*tf.atan(10*X))/((100*tf.pow(Y,2) + 1)*(100*tf.pow(Z,2) + 1)) + ((2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Y,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(8*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(2*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(20*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(Y,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(20*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - ((12*tf.pow(Z,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(20*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Y - 4*tf.pow(Y,3))*((50*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*X)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Y,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*X)*tf.atan(10*Z)*(12*tf.pow(Y,2) - 2))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) - (1000*Y*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/(tf.pow((100*tf.pow(Y,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Y - 4*tf.pow(Y,3))*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Y,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(20*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + ((2*Z - 4*tf.pow(Z,3))*((50*tf.atan(10*Y)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (50*tf.atan(10*X)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (5*tf.atan(10*X)*tf.atan(10*Y)*(12*tf.pow(Z,2) - 2))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) - (1000*Z*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/(tf.pow((100*tf.pow(Z,2) + 1),2)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3))*(2*Z - 4*tf.pow(Z,3))*(12*tf.pow(Z,2) - 2))/(4*(100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2))))/(20*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (10*tf.atan(10*X)*tf.atan(10*Y))/(100*tf.pow(Z,2) + 1) + (10*tf.atan(10*X)*tf.atan(10*Z))/(100*tf.pow(Y,2) + 1) + (10*tf.atan(10*Y)*tf.atan(10*Z))/(100*tf.pow(X,2) + 1) + (tf.pow((2*Z - 4*tf.pow(Z,3)),2)*(12*tf.pow(Z,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(80*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (200*X*tf.atan(10*Y)*tf.atan(10*Z))/tf.pow((100*tf.pow(X,2) + 1),2) + (200*Y*tf.atan(10*X)*tf.atan(10*Z))/tf.pow((100*tf.pow(Y,2) + 1),2) + (200*Z*tf.atan(10*X)*tf.atan(10*Y))/tf.pow((100*tf.pow(Z,2) + 1),2) + (tf.pow((2*X - 4*tf.pow(X,3)),2)*(12*tf.pow(X,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(80*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)) + (tf.pow((2*Y - 4*tf.pow(Y,3)),2)*(12*tf.pow(Y,2) - 2)*((5*tf.atan(10*Y)*tf.atan(10*Z)*(2*X - 4*tf.pow(X,3)))/((100*tf.pow(X,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Z)*(2*Y - 4*tf.pow(Y,3)))/((100*tf.pow(Y,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2)) + (5*tf.atan(10*X)*tf.atan(10*Y)*(2*Z - 4*tf.pow(Z,3)))/((100*tf.pow(Z,2) + 1)*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),1/2))))/(80*tf.pow((tf.pow((2*X - 4*tf.pow(X,3)),2)/4 + tf.pow((2*Y - 4*tf.pow(Y,3)),2)/4 + tf.pow((2*Z - 4*tf.pow(Z,3)),2)/4),3/2)))


    def boundary(_, on_boundary):
        return on_boundary

    def func(x):   # boundary condition
        X, Y, Z = x[:, 0:1], x[:, 1:2], x[:, 2:]
        epsilon = 1e-1
        value = np.arctan(X / epsilon) * np.arctan(Y / epsilon) * np.arctan(Z / epsilon) 
        return value

    geom = dde.geometry.Sphere(center=[0, 0, 0], radius=1.0)
    bc = dde.DirichletBC(geom, func, boundary)

    h = 0.025
    data = scio.loadmat('./surface_data/surface1/c_n_h_' + str(h) + '.mat')
    train_c_n = data['p']
    data = scio.loadmat('./surface_data/surface1/n_e_h_' + str(h) + '.mat')
    train_n_e = (data['t'] - 1).astype(int)

    test_c_n = np.zeros((train_n_e.shape[0], 3))
    for k in range(0, train_n_e.shape[0]):
        loc_e = train_n_e[k, :]
        loc_n = train_c_n[loc_e, :]
        test_c_n[k, :] = np.mean(loc_n, axis=0)
    test_n_e = train_n_e

    percent = 1
    eta = 1e-4
    N_hidden = 5
    N_neuron = 50
    data = dde.data.PDE(geom, pde, bc, num_domain=int(50*percent), num_boundary=0, num_test=20, wight=[1, 0, 0])
    data.num_domain = train_c_n.shape[0]
    data.num_test = test_c_n.shape[0]
    data.train_x = train_c_n
    data.test_x = test_c_n
    net = dde.maps.FNN([3] + [N_neuron] * N_hidden + [1], "tanh", "Glorot uniform")     ## generate model  "elu" "relu" "selu" "sigmoid" "sin" "swish" "tanh"
    model = dde.Model(data, net)


    model.compile("adam", lr=eta)
    # losshistory, train_state = 0, 0
    # model.train(epochs=1)
    losshistory, train_state = model.train(epochs=20000)

    end = time.time()
    print(end - start)


    ## -----------------------------------------------------------------------------------------------------------------
    ## predict and draw
    Numerical = 3
    if Numerical == 1:
        def true_fun(X, Y, Z):
            epsilon = 1e-1
            value = np.arctan(X/epsilon)*np.arctan(Y/epsilon)*np.arctan(Z/epsilon)
            return value

        x = test_c_n[:, 0]
        y = test_c_n[:, 1]
        z = test_c_n[:, 2]
        coordinates = np.hstack((x.reshape((-1, 1)), y.reshape((-1, 1)), z.reshape((-1, 1))))

        true_value = []
        for i in range(0, x.reshape((-1, 1)).shape[0]):
            true_value.append(true_fun(x.reshape((-1, 1))[i, 0], y.reshape((-1, 1))[i, 0], z.reshape((-1, 1))[i, 0]))

        tv_z = np.array(true_value)
        ml_z = model.predict(coordinates)
        fem_z = np.load('./1e-1/fem_y_' + str(h) + '.npy')
        triangles = test_n_e
        rsfem_z = abs(tv_z - fem_z)
        rsml_z = abs(tv_z - ml_z[:, 0])

        mins = min(tv_z.min(), ml_z.min(), fem_z.min())
        maxs = max((tv_z - mins).max(), (ml_z - mins).max(), (fem_z - mins).max())
        color_tv = (tv_z - mins) / maxs
        color_fem = (fem_z - mins) / maxs
        color_ml = (ml_z - mins) / maxs

        mins = min(rsfem_z.min(), rsml_z.min())
        maxs = max((rsfem_z - mins).max(), (rsml_z - mins).max())
        color_rsfem = (rsfem_z - mins) / maxs
        color_rsml = (rsml_z - mins) / maxs

        # error
        L_2_true = np.linalg.norm(tv_z, ord=2)
        L_2_ml = np.linalg.norm(tv_z-ml_z[:, 0], ord=2) / L_2_true
        L_2_fem = np.linalg.norm(tv_z-fem_z, ord=2) / L_2_true
        print('ml:', L_2_ml)
        print('fem:', L_2_fem)

        # draw
        fig = plt.figure(figsize=(14, 7.0))
        plt.subplots_adjust(left=0.05, right=0.95, wspace=0.35)

        # ------------------------------------------------
        ax1 = fig.add_subplot(231, projection='3d')
        surf1 = ax1.plot_trisurf(train_c_n[:, 0].ravel(), train_c_n[:, 1].ravel(), train_c_n[:, 2].ravel(), triangles=triangles, cmap='jet', linewidth=0, antialiased=False)
        surf1.set_array(color_tv)
        ax1.set_title("$u_{True}$ on surface")
        ax1.view_init(elev=25, azim=50)
        # ------------------------------------------------
        ax2 = fig.add_subplot(232, projection='3d')
        surf1 = ax2.plot_trisurf(train_c_n[:, 0].ravel(), train_c_n[:, 1].ravel(), train_c_n[:, 2].ravel(), triangles=triangles, cmap='jet', linewidth=0, antialiased=False)
        surf1.set_array(color_ml[:, 0])
        ax2.set_title("$u_{DLM_{s}}$ on surface")
        ax2.view_init(elev=25, azim=50)
        # ------------------------------------------------
        ax3 = fig.add_subplot(233, projection='3d')
        surf1 = ax3.plot_trisurf(train_c_n[:, 0].ravel(), train_c_n[:, 1].ravel(), train_c_n[:, 2].ravel(), triangles=triangles, cmap='jet', linewidth=0, antialiased=False)
        surf1.set_array(color_fem)
        ax3.set_title('$u_{FEM}$ on surface')
        ax3.view_init(elev=25, azim=50)
        # ------------------------------------------------
        ax4 = fig.add_subplot(234)
        loss_train = np.sum(np.array(losshistory.loss_train) * losshistory.loss_weights, axis=1)
        loss_test = np.sum(np.array(losshistory.loss_test) * losshistory.loss_weights, axis=1)
        ax4.semilogy(losshistory.steps, loss_train, label="Train loss")
        ax4.semilogy(losshistory.steps, loss_test, label="Test loss")
        ax4.yaxis.tick_right()
        plt.legend()
        ax4.set_xlabel("Steps")
        # ------------------------------------------------
        ax5 = fig.add_subplot(235, projection='3d')
        surf2 = ax5.plot_trisurf(train_c_n[:, 0].ravel(), train_c_n[:, 1].ravel(), train_c_n[:, 2].ravel(), triangles=triangles, cmap='Reds', linewidth=0, antialiased=False)
        surf2.set_array(color_rsml)
        ax5.set_title("$|u_{True}-u_{DLM_{s}}|$")
        ax5.view_init(elev=25, azim=50)
        # ------------------------------------------------
        ax6 = fig.add_subplot(236, projection='3d')
        surf2 = ax6.plot_trisurf(train_c_n[:, 0].ravel(), train_c_n[:, 1].ravel(), train_c_n[:, 2].ravel(), triangles=triangles, cmap='Reds', linewidth=0, antialiased=False)
        surf2.set_array(color_rsfem)
        ax6.set_title("$|u_{True}-u_{FEM}|$")
        ax6.view_init(elev=25, azim=50)


        cb1 = fig.colorbar(surf1, ax=[ax1, ax2, ax3])
        cb2 = fig.colorbar(surf2, ax=[ax4, ax5, ax6])

        cb1.set_ticks(np.linspace(surf1.norm.vmin, surf1.norm.vmax, num=10))
        scale = np.linspace(min(tv_z.min(), ml_z.min(), fem_z.min()), max(tv_z.max(), ml_z.max(), fem_z.max()), num=10)
        scale1 = []
        for i in range(0, 10):
            scale1.append('{:.2e}'.format(scale[i]))
        cb1.set_ticklabels(scale1)

        cb2.set_ticks(np.linspace(surf2.norm.vmin, surf2.norm.vmax, num=10))
        scale = np.linspace(min(rsfem_z.min(), rsml_z.min()), max(rsfem_z.max(), rsml_z.max()), num=10)
        scale2 = []
        for i in range(0, 10):
            scale2.append('{:.2e}'.format(scale[i]))
        cb2.set_ticklabels(scale2)

        plt.rcParams['pdf.fonttype'] = 42
        plt.rcParams['font.family'] = 'Calibri'
        plt.savefig('./1e-1/Num3_Surface_solution_' + str(h) + '.pdf')
        plt.show()

    elif Numerical == 2:
        x = test_c_n[:, 0]
        y = test_c_n[:, 1]
        z = test_c_n[:, 2]
        coordinates = np.hstack((x.reshape((-1, 1)), y.reshape((-1, 1)), z.reshape((-1, 1))))
        ml_z = model.predict(coordinates)

        mins = ml_z.min()
        maxs = (ml_z - mins).max()
        color_ml = (ml_z - mins) / maxs
        triangles = test_n_e

        fig = plt.figure(figsize=(5.0, 3.5))
        plt.subplots_adjust(left=0.05, right=0.95, wspace=0.35)
        plt.autoscale(enable=True)
        # ------------------------------------------------
        ax1 = fig.add_subplot(111, projection='3d')
        surf = ax1.plot_trisurf(train_c_n[:, 0].ravel(), train_c_n[:, 1].ravel(), train_c_n[:, 2].ravel(), triangles=triangles, cmap='jet', linewidth=0, antialiased=False)
        surf.set_array(color_ml[:, 0])
        ax1.set_xlabel('x'), ax1.set_ylabel('y'), ax1.set_zlabel('z')
        ax1.view_init(elev=25, azim=50)
        # ax1.set_box_aspect([1, 1, 0.25])


        cb = fig.colorbar(surf, ax=[ax1])
        cb.set_ticks(np.linspace(surf.norm.vmin, surf.norm.vmax, num=10))
        scale = np.linspace(ml_z.min(), ml_z.max(), num=10)
        scale1 = []
        for i in range(0, 10):
            scale1.append('{:.2e}'.format(scale[i]))
        cb.set_ticklabels(scale1)

        plt.rcParams['pdf.fonttype'] = 42
        plt.rcParams['font.family'] = 'Calibri'
        # plt.savefig('Num4_Surface_solution_' + str(h) + '.pdf')

        plt.show()





if __name__ == "__main__":
    main()
